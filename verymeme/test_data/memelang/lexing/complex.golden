Token(ENUM, 'enum',  1:0, no int, "enum")
Token(IDENT, 'Unit',  1:5, no int, "Unit")
Token(LBRACE, '{',  1:10, no int, "{")
Token(RBRACE, '}',  1:11, no int, "}")
Token(ENUM, 'enum',  2:1, no int, "enum")
Token(IDENT, 'TestEnum',  2:6, no int, "TestEnum")
Token(LBRACE, '{',  2:15, no int, "{")
Token(IDENT, 'Test1',  3:3, no int, "Test1")
Token(COMMA, ',',  3:8, no int, ",")
Token(IDENT, 'Test2',  3:10, no int, "Test2")
Token(COMMA, ',',  3:15, no int, ",")
Token(IDENT, 'Test3',  3:17, no int, "Test3")
Token(LPAREN, '(',  3:22, no int, "(")
Token(IDENT, 'A',  3:23, no int, "A")
Token(RPAREN, ')',  3:24, no int, ")")
Token(COMMA, ',',  3:25, no int, ",")
Token(RBRACE, '}',  4:1, no int, "}")
Token(ENUM, 'enum',  5:1, no int, "enum")
Token(IDENT, 'Result',  5:6, no int, "Result")
Token(LANGLE, '<',  5:12, no int, "<")
Token(IDENT, 'R',  5:13, no int, "R")
Token(COMMA, ',',  5:14, no int, ",")
Token(IDENT, 'E',  5:16, no int, "E")
Token(RANGLE, '>',  5:17, no int, ">")
Token(LBRACE, '{',  5:19, no int, "{")
Token(IDENT, 'Ok',  6:3, no int, "Ok")
Token(LPAREN, '(',  6:5, no int, "(")
Token(IDENT, 'R',  6:6, no int, "R")
Token(RPAREN, ')',  6:7, no int, ")")
Token(COMMA, ',',  6:8, no int, ",")
Token(IDENT, 'Err',  6:10, no int, "Err")
Token(LPAREN, '(',  6:13, no int, "(")
Token(IDENT, 'E',  6:14, no int, "E")
Token(RPAREN, ')',  6:15, no int, ")")
Token(COMMA, ',',  6:16, no int, ",")
Token(RBRACE, '}',  7:1, no int, "}")
Token(FN, 'fn',  8:1, no int, "fn")
Token(IDENT, 'test',  8:4, no int, "test")
Token(LANGLE, '<',  8:8, no int, "<")
Token(IDENT, 'T',  8:9, no int, "T")
Token(RANGLE, '>',  8:10, no int, ">")
Token(LPAREN, '(',  8:11, no int, "(")
Token(IDENT, 'a',  8:12, no int, "a")
Token(COLON, ':',  8:13, no int, ":")
Token(CONST, 'const',  8:15, no int, "const")
Token(ASTERISK, '*',  8:21, no int, "*")
Token(IDENT, 'T',  8:22, no int, "T")
Token(RPAREN, ')',  8:23, no int, ")")
Token(IDENT, 'Unit',  8:25, no int, "Unit")
Token(LBRACE, '{',  8:30, no int, "{")
Token(RBRACE, '}',  8:31, no int, "}")
Token(STRUCT, 'struct',  9:1, no int, "struct")
Token(IDENT, 'A',  9:8, no int, "A")
Token(LBRACE, '{',  9:10, no int, "{")
Token(IDENT, 'v',  9:12, no int, "v")
Token(COLON, ':',  9:13, no int, ":")
Token(I8, 'i8',  9:15, no int, "i8")
Token(SEMICOLON, ';',  9:17, no int, ";")
Token(IDENT, 'y',  9:19, no int, "y")
Token(COLON, ':',  9:20, no int, ":")
Token(BIT, 'bit',  9:22, no int, "bit")
Token(COLON, ':',  9:25, no int, ":")
Token(INT_LIT, '5',  9:27, 5, "5")
Token(SEMICOLON, ';',  9:28, no int, ";")
Token(IDENT, 'z',  9:30, no int, "z")
Token(COLON, ':',  9:31, no int, ":")
Token(BOOL, 'bool',  9:33, no int, "bool")
Token(SEMICOLON, ';',  9:37, no int, ";")
Token(STATIC, 'static',  9:39, no int, "static")
Token(FN, 'fn',  9:46, no int, "fn")
Token(IDENT, 'new',  9:49, no int, "new")
Token(LPAREN, '(',  9:52, no int, "(")
Token(RPAREN, ')',  9:53, no int, ")")
Token(IDENT, 'Unit',  9:55, no int, "Unit")
Token(LBRACE, '{',  9:60, no int, "{")
Token(RBRACE, '}',  9:61, no int, "}")
Token(RBRACE, '}',  9:63, no int, "}")
Token(INTF, 'intf',  10:1, no int, "intf")
Token(IDENT, 'Intf',  10:6, no int, "Intf")
Token(LBRACE, '{',  10:11, no int, "{")
Token(RBRACE, '}',  10:12, no int, "}")
Token(INTF, 'intf',  11:1, no int, "intf")
Token(IDENT, 'IntfT',  11:6, no int, "IntfT")
Token(LANGLE, '<',  11:11, no int, "<")
Token(IDENT, 'T',  11:12, no int, "T")
Token(RANGLE, '>',  11:13, no int, ">")
Token(LBRACE, '{',  11:15, no int, "{")
Token(RBRACE, '}',  11:16, no int, "}")
Token(IMPL, 'impl',  12:1, no int, "impl")
Token(IDENT, 'Intf',  12:6, no int, "Intf")
Token(FOR, 'for',  12:11, no int, "for")
Token(IDENT, 'A',  12:15, no int, "A")
Token(LBRACE, '{',  12:17, no int, "{")
Token(RBRACE, '}',  12:18, no int, "}")
Token(IMPL, 'impl',  13:1, no int, "impl")
Token(LANGLE, '<',  13:5, no int, "<")
Token(IDENT, 'T',  13:6, no int, "T")
Token(RANGLE, '>',  13:7, no int, ">")
Token(IDENT, 'IntfT',  13:9, no int, "IntfT")
Token(LANGLE, '<',  13:14, no int, "<")
Token(IDENT, 'T',  13:15, no int, "T")
Token(RANGLE, '>',  13:16, no int, ">")
Token(FOR, 'for',  13:18, no int, "for")
Token(IDENT, 'A',  13:22, no int, "A")
Token(LBRACE, '{',  13:24, no int, "{")
Token(RBRACE, '}',  13:25, no int, "}")
Token(FN, 'fn',  14:1, no int, "fn")
Token(IDENT, 'main',  14:4, no int, "main")
Token(LPAREN, '(',  14:8, no int, "(")
Token(RPAREN, ')',  14:9, no int, ")")
Token(I8, 'i8',  14:11, no int, "i8")
Token(LBRACE, '{',  14:14, no int, "{")
Token(ASM, ' {}',  15:6, no int, "asm")
Token(ASM, '  }',  18:1, no int, "asm
    lhu r30, 3
  ")
Token(VAR, 'var',  19:3, no int, "var")
Token(IDENT, 'decl',  19:7, no int, "decl")
Token(COLON, ':',  19:11, no int, ":")
Token(IDENT, 'A',  19:13, no int, "A")
Token(SEMICOLON, ';',  19:14, no int, ";")
Token(VAR, 'var',  20:3, no int, "var")
Token(IDENT, 'st',  20:7, no int, "st")
Token(COLON, ':',  20:9, no int, ":")
Token(IDENT, 'A',  20:11, no int, "A")
Token(EQUAL, '=',  20:13, no int, "=")
Token(IDENT, 'A',  20:15, no int, "A")
Token(LBRACE, '{',  20:17, no int, "{")
Token(RBRACE, '}',  20:18, no int, "}")
Token(SEMICOLON, ';',  20:19, no int, ";")
Token(VAR, 'var',  21:3, no int, "var")
Token(IDENT, 'test_enum',  21:7, no int, "test_enum")
Token(COLON, ':',  21:16, no int, ":")
Token(IDENT, 'TestEnum',  21:18, no int, "TestEnum")
Token(EQUAL, '=',  21:27, no int, "=")
Token(IDENT, 'Test3',  21:29, no int, "Test3")
Token(LPAREN, '(',  21:34, no int, "(")
Token(IDENT, 'st',  21:35, no int, "st")
Token(RPAREN, ')',  21:37, no int, ")")
Token(SEMICOLON, ';',  21:38, no int, ";")
Token(IDENT, 'st',  22:3, no int, "st")
Token(DOT, '.',  22:5, no int, ".")
Token(IDENT, 'v',  22:6, no int, "v")
Token(EQUAL, '=',  22:8, no int, "=")
Token(INT_LIT, '0x3',  22:10, 3, "0x3")
Token(SEMICOLON, ';',  22:13, no int, ";")
Token(VAR, 'var',  23:3, no int, "var")
Token(IDENT, 'e',  23:7, no int, "e")
Token(COLON, ':',  23:8, no int, ":")
Token(I8, 'i8',  23:10, no int, "i8")
Token(EQUAL, '=',  23:13, no int, "=")
Token(INT_LIT, '0',  23:15, 0, "0")
Token(SEMICOLON, ';',  23:16, no int, ";")
Token(VAR, 'var',  24:3, no int, "var")
Token(IDENT, 'a',  24:7, no int, "a")
Token(COLON, ':',  24:8, no int, ":")
Token(I8, 'i8',  24:10, no int, "i8")
Token(EQUAL, '=',  24:13, no int, "=")
Token(INT_LIT, '02',  24:15, 2, "02")
Token(SEMICOLON, ';',  24:17, no int, ";")
Token(VAR, 'var',  25:3, no int, "var")
Token(IDENT, 'd',  25:7, no int, "d")
Token(COLON, ':',  25:8, no int, ":")
Token(LSQUARE, '[',  25:10, no int, "[")
Token(INT_LIT, '40',  25:11, 40, "40")
Token(RSQUARE, ']',  25:13, no int, "]")
Token(I8, 'i8',  25:14, no int, "i8")
Token(EQUAL, '=',  25:17, no int, "=")
Token(LSQUARE, '[',  25:19, no int, "[")
Token(RSQUARE, ']',  25:20, no int, "]")
Token(SEMICOLON, ';',  25:21, no int, ";")
Token(IDENT, 'd',  26:3, no int, "d")
Token(LSQUARE, '[',  26:4, no int, "[")
Token(DMINUS, '--',  26:5, no int, "-")
Token(IDENT, 'st',  26:7, no int, "st")
Token(DOT, '.',  26:9, no int, ".")
Token(IDENT, 'v',  26:10, no int, "v")
Token(RSQUARE, ']',  26:11, no int, "]")
Token(EQUAL, '=',  26:13, no int, "=")
Token(INT_LIT, '1',  26:15, 1, "1")
Token(SEMICOLON, ';',  26:16, no int, ";")
Token(IDENT, 'd',  27:3, no int, "d")
Token(LSQUARE, '[',  27:4, no int, "[")
Token(IDENT, 'st',  27:5, no int, "st")
Token(DOT, '.',  27:7, no int, ".")
Token(IDENT, 'v',  27:8, no int, "v")
Token(DPLUS, '++',  27:9, no int, "+")
Token(RSQUARE, ']',  27:11, no int, "]")
Token(EQUAL, '=',  27:13, no int, "=")
Token(INT_LIT, '1',  27:15, 1, "1")
Token(SEMICOLON, ';',  27:16, no int, ";")
Token(IDENT, 'd',  28:3, no int, "d")
Token(LSQUARE, '[',  28:4, no int, "[")
Token(INT_LIT, '40',  28:5, 40, "40")
Token(MINUS, '-',  28:8, no int, "-")
Token(INT_LIT, '1',  28:10, 1, "1")
Token(RSQUARE, ']',  28:11, no int, "]")
Token(EQUAL, '=',  28:13, no int, "=")
Token(BOOL_LIT, 'true',  28:15, 1, "true")
Token(DAMPERSAND, '&&',  28:20, no int, "&&")
Token(LPAREN, '(',  28:23, no int, "(")
Token(BOOL_LIT, 'true',  28:24, 1, "true")
Token(DBAR, '||',  28:29, no int, "||")
Token(IDENT, '!false',  28:32, no int, "!false")
Token(RPAREN, ')',  28:38, no int, ")")
Token(QUESTION, '?',  28:40, no int, "?")
Token(IDENT, '~0',  28:42, no int, "~0")
Token(AMPERSAND, '&',  28:45, no int, "&")
Token(INT_LIT, '1',  28:47, 1, "1")
Token(COLON, ':',  28:49, no int, ":")
Token(INT_LIT, '1',  28:51, 1, "1")
Token(CARET, '^',  28:53, no int, "^")
Token(INT_LIT, '2',  28:55, 2, "2")
Token(BAR, '|',  28:57, no int, "|")
Token(INT_LIT, '3',  28:59, 3, "3")
Token(SEMICOLON, ';',  28:60, no int, ";")
Token(IF, 'if',  29:3, no int, "if")
Token(IDENT, 'e',  29:6, no int, "e")
Token(DEQUAL, '==',  29:8, no int, "=")
Token(IDENT, 'st',  29:11, no int, "st")
Token(DOT, '.',  29:13, no int, ".")
Token(IDENT, 'v',  29:14, no int, "v")
Token(DBAR, '||',  29:16, no int, "||")
Token(IDENT, 'd',  29:19, no int, "d")
Token(LSQUARE, '[',  29:20, no int, "[")
Token(INT_LIT, '23',  29:21, 23, "23")
Token(MINUS, '-',  29:24, no int, "-")
Token(INT_LIT, '2',  29:26, 2, "2")
Token(RSQUARE, ']',  29:27, no int, "]")
Token(NEQUAL, '!=',  29:29, no int, "=")
Token(IDENT, 'a',  29:32, no int, "a")
Token(DBAR, '||',  29:34, no int, "||")
Token(IDENT, 'a',  29:37, no int, "a")
Token(LTEQUAL, '<=',  29:39, no int, "=")
Token(IDENT, 'e',  29:42, no int, "e")
Token(DBAR, '||',  29:44, no int, "||")
Token(IDENT, 'a',  29:47, no int, "a")
Token(RANGLE, '>',  29:49, no int, ">")
Token(IDENT, 'e',  29:51, no int, "e")
Token(DBAR, '||',  29:53, no int, "||")
Token(IDENT, 'e',  29:56, no int, "e")
Token(GTEQUAL, '>=',  29:58, no int, "=")
Token(IDENT, 'st',  29:61, no int, "st")
Token(DOT, '.',  29:63, no int, ".")
Token(IDENT, 'v',  29:64, no int, "v")
Token(DBAR, '||',  29:66, no int, "||")
Token(IDENT, 'e',  29:69, no int, "e")
Token(LANGLE, '<',  29:71, no int, "<")
Token(IDENT, 'd',  29:73, no int, "d")
Token(LSQUARE, '[',  29:74, no int, "[")
Token(INT_LIT, '3',  29:75, 3, "3")
Token(RSQUARE, ']',  29:76, no int, "]")
Token(LBRACE, '{',  29:78, no int, "{")
Token(IDENT, 'test',  30:5, no int, "test")
Token(LANGLE, '<',  30:9, no int, "<")
Token(I8, 'i8',  30:10, no int, "i8")
Token(RANGLE, '>',  30:12, no int, ">")
Token(LPAREN, '(',  30:13, no int, "(")
Token(IDENT, '&e',  30:14, no int, "&e")
Token(RPAREN, ')',  30:16, no int, ")")
Token(SEMICOLON, ';',  30:17, no int, ";")
Token(RBRACE, '}',  31:3, no int, "}")
Token(ELSE, 'else',  31:5, no int, "else")
Token(IF, 'if',  31:10, no int, "if")
Token(BOOL_LIT, 'true',  31:13, 1, "true")
Token(LBRACE, '{',  31:18, no int, "{")
Token(RBRACE, '}',  31:19, no int, "}")
Token(ELSE, 'else',  31:21, no int, "else")
Token(LBRACE, '{',  31:26, no int, "{")
Token(MATCH, 'match',  32:5, no int, "match")
Token(IDENT, 'a',  32:11, no int, "a")
Token(LBRACE, '{',  32:13, no int, "{")
Token(INT_LIT, '1',  33:7, 1, "1")
Token(LBRACE, '{',  33:9, no int, "{")
Token(RBRACE, '}',  33:10, no int, "}")
Token(INT_LIT, '2',  34:7, 2, "2")
Token(LBRACE, '{',  34:9, no int, "{")
Token(RBRACE, '}',  34:10, no int, "}")
Token(INT_LIT, '3',  35:7, 3, "3")
Token(LBRACE, '{',  35:9, no int, "{")
Token(IDENT, 'print',  35:10, no int, "print")
Token(LPAREN, '(',  35:15, no int, "(")
Token(INT_LIT, '5',  35:16, 5, "5")
Token(RPAREN, ')',  35:17, no int, ")")
Token(SEMICOLON, ';',  35:18, no int, ";")
Token(RBRACE, '}',  35:19, no int, "}")
Token(RBRACE, '}',  36:5, no int, "}")
Token(MATCH, 'match',  37:5, no int, "match")
Token(IDENT, 'test_enum',  37:11, no int, "test_enum")
Token(LBRACE, '{',  37:21, no int, "{")
Token(IDENT, 'Test1',  38:7, no int, "Test1")
Token(LBRACE, '{',  38:13, no int, "{")
Token(RBRACE, '}',  38:14, no int, "}")
Token(IDENT, 'Test2',  39:7, no int, "Test2")
Token(LBRACE, '{',  39:13, no int, "{")
Token(RBRACE, '}',  39:14, no int, "}")
Token(IDENT, 'Test3',  40:7, no int, "Test3")
Token(LPAREN, '(',  40:12, no int, "(")
Token(IDENT, 'x',  40:13, no int, "x")
Token(RPAREN, ')',  40:14, no int, ")")
Token(LBRACE, '{',  40:16, no int, "{")
Token(IDENT, 'print',  40:17, no int, "print")
Token(LPAREN, '(',  40:22, no int, "(")
Token(IDENT, 'x',  40:23, no int, "x")
Token(RPAREN, ')',  40:24, no int, ")")
Token(SEMICOLON, ';',  40:25, no int, ";")
Token(RBRACE, '}',  40:26, no int, "}")
Token(RBRACE, '}',  41:5, no int, "}")
Token(RBRACE, '}',  42:3, no int, "}")
Token(VAR, 'var',  43:3, no int, "var")
Token(IDENT, 'b',  43:7, no int, "b")
Token(COLON, ':',  43:8, no int, ":")
Token(CONST, 'const',  43:10, no int, "const")
Token(AUTO, 'auto',  43:16, no int, "auto")
Token(EQUAL, '=',  43:21, no int, "=")
Token(MINUS, '-',  43:23, no int, "-")
Token(LPAREN, '(',  43:24, no int, "(")
Token(INT_LIT, '34',  43:25, 34, "34")
Token(PLUS, '+',  43:28, no int, "+")
Token(INT_LIT, '32',  43:30, 32, "32")
Token(RPAREN, ')',  43:32, no int, ")")
Token(ASTERISK, '*',  43:34, no int, "*")
Token(LPAREN, '(',  43:36, no int, "(")
Token(INT_LIT, '55',  43:37, 55, "55")
Token(FSLASH, '/',  43:40, no int, "/")
Token(INT_LIT, '3',  43:42, 3, "3")
Token(RPAREN, ')',  43:43, no int, ")")
Token(MINUS, '-',  43:45, no int, "-")
Token(MINUS, '-',  43:47, no int, "-")
Token(INT_LIT, '4',  43:48, 4, "4")
Token(SEMICOLON, ';',  43:49, no int, ";")
Token(IDENT, 'a',  44:3, no int, "a")
Token(DMINUS, '--',  44:4, no int, "-")
Token(INT_LIT, '4',  44:7, 4, "4")
Token(PERCENT, '%',  44:9, no int, "%")
Token(INT_LIT, '2',  44:11, 2, "2")
Token(SEMICOLON, ';',  44:12, no int, ";")
Token(IDENT, 'a',  45:3, no int, "a")
Token(DMINUS, '--',  45:4, no int, "-")
Token(MINUS, '-',  45:6, no int, "-")
Token(IDENT, 'b',  45:8, no int, "b")
Token(SEMICOLON, ';',  45:9, no int, ";")
Token(IDENT, ''a'',  46:3, no int, "'a'")
Token(SEMICOLON, ';',  46:6, no int, ";")
Token(IDENT, ''\\'',  47:3, no int, "'\\'")
Token(SEMICOLON, ';',  47:7, no int, ";")
Token(IDENT, ''\''',  48:3, no int, "'\''")
Token(SEMICOLON, ';',  48:7, no int, ";")
Token(IDENT, ''\"'',  49:3, no int, "'\"'")
Token(SEMICOLON, ';',  49:7, no int, ";")
Token(IDENT, '"b\""',  50:3, no int, ""b\""")
Token(SEMICOLON, ';',  50:8, no int, ";")
Token(INT_LIT, '5',  51:3, 5, "5")
Token(DOT, '.',  51:4, no int, ".")
Token(INT_LIT, '5',  51:5, 5, "5")
Token(SEMICOLON, ';',  51:6, no int, ";")
Token(FOR, 'for',  52:3, no int, "for")
Token(VAR, 'var',  52:7, no int, "var")
Token(IDENT, 'f',  52:11, no int, "f")
Token(COLON, ':',  52:12, no int, ":")
Token(I8, 'i8',  52:14, no int, "i8")
Token(EQUAL, '=',  52:17, no int, "=")
Token(INT_LIT, '0',  52:19, 0, "0")
Token(SEMICOLON, ';',  52:20, no int, ";")
Token(IDENT, 'f',  52:22, no int, "f")
Token(LANGLE, '<',  52:24, no int, "<")
Token(INT_LIT, '10',  52:26, 10, "10")
Token(SEMICOLON, ';',  52:28, no int, ";")
Token(IDENT, 'f',  52:30, no int, "f")
Token(DPLUS, '++',  52:31, no int, "+")
Token(LBRACE, '{',  52:34, no int, "{")
Token(RETURN, 'return',  53:5, no int, "return")
Token(INT_LIT, '4',  53:12, 4, "4")
Token(SEMICOLON, ';',  53:13, no int, ";")
Token(RBRACE, '}',  54:3, no int, "}")
Token(COMMENT, '''',  55:22, no int, "/")
Token(RETURN, 'return',  56:3, no int, "return")
Token(INT_LIT, '0',  56:10, 0, "0")
Token(SEMICOLON, ';',  56:11, no int, ";")
Token(RBRACE, '}',  57:1, no int, "}")

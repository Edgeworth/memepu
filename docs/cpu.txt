### Registers
General purpose: A, B
ALU reg: ALU0, ALU1
System: M, M0, M1, M2, M3
Stack: SP
Address: ADDR - only 3 byte, 24 bit physical address space, 32 bit virtual.
Instruction pointer: PC - initially 0
MMU register
Page directory address: PAGE

#### Status/Control SC register
Interrupts Off/On, Paging Off/On, Privileged/Unprivileged, Secure/Not secure
ALU STATUS: Carry, Zero - no need to save in actual status reg.

#### Interrupt register -
Level triggered, but latched on each falling clock, each device will assert until ack comes and it decides to stop asserting.
Note this means devices need to assert the line until they get serviced (level triggered). Latch on the falling clock so that the control logic can start reacting to interrupt changes as soon as possible.
- Timer
- Software (e.g. syscall)
- Keyboard
- Mouse
- Network
- Storage?

#### Opcode register - write only
Needs to be counter
- OPCODE0, OPCODE1 (4 bit), optional

### ALU:
Contains NAND and SUM with carry-in. Use 8 74hc283s.
Cin to Cout propagation time: ...

### Physical memory map:
Top 2 bits chooses a bank. 24 bit physical address space.
0x800000 - 0x87fffff: 512 KiB RAM
0x900000 - 0x97fffff: Mirror: 512 KiB RAM
0xa00000 - 0xa7fffff: Mirror: 512 KiB RAM
0xb00000 - 0xb7fffff: Mirror: 512 KiB RAM

### Control signals
IN plane:
	NONE
	A, B, SP, PC, ADDR, MMU, ALU0, ALU1
	M, M0, M1, M2, M3,
	PAGE, STATUS, INTERRUPT
	OPCODE0, OPCODE1,

OUT plane:
	NONE
	A, B, SP, PC, SUM, NAND, M, MMU,
	EEPROM
	STATUS,
	INTERRUPT,
	PAGE,
	ALU_STATUS
	BUS0, BUS1, BUS2, BUS3

MULTI:
  RESET: NCLK
  Reset uop counter: NCLK
  Set interrupt enable synchronos: NCLK
  Unset interrupt enable synchronos: NCLK
  CARRY_IN

### Peripherals
#### Keyboard
#### Mouse
#### VGA
#### Ethernet
#### USB mass storage/SDCard/MMC - MMC may be simpler
#### Timer
#### RS232

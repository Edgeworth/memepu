Token(COMMENT, complex.meme:1:0, '// status: ok', '//')
Token(COMMENT, complex.meme:2:1, '// input: ''', '//')
Token(COMMENT, complex.meme:3:1, '// output: ''', '//')
Token(COMMENT, complex.meme:4:1, '// returns: 4', '//')
Token(ENUM, complex.meme:5:1, 'enum', 'enum')
Token(IDENT, complex.meme:5:6, 'TestEnum', 'TestEnum')
Token(LBRACE, complex.meme:5:15, '{', '{')
Token(IDENT, complex.meme:6:3, 'Test1', 'Test1')
Token(COMMA, complex.meme:6:8, ',', ',')
Token(IDENT, complex.meme:6:10, 'Test2', 'Test2')
Token(COMMA, complex.meme:6:15, ',', ',')
Token(IDENT, complex.meme:6:17, 'Test3', 'Test3')
Token(COLON, complex.meme:6:22, ':', ':')
Token(IDENT, complex.meme:6:24, 'A', 'A')
Token(COMMA, complex.meme:6:25, ',', ',')
Token(RBRACE, complex.meme:7:1, '}', '}')
Token(ENUM, complex.meme:8:1, 'enum', 'enum')
Token(IDENT, complex.meme:8:6, 'Result', 'Result')
Token(LANGLE, complex.meme:8:12, '<', '<')
Token(IDENT, complex.meme:8:13, 'R', 'R')
Token(COMMA, complex.meme:8:14, ',', ',')
Token(IDENT, complex.meme:8:16, 'E', 'E')
Token(RANGLE, complex.meme:8:17, '>', '>')
Token(LBRACE, complex.meme:8:19, '{', '{')
Token(IDENT, complex.meme:9:3, 'Ok', 'Ok')
Token(COLON, complex.meme:9:5, ':', ':')
Token(IDENT, complex.meme:9:7, 'R', 'R')
Token(COMMA, complex.meme:9:8, ',', ',')
Token(IDENT, complex.meme:9:10, 'Err', 'Err')
Token(COLON, complex.meme:9:13, ':', ':')
Token(IDENT, complex.meme:9:15, 'E', 'E')
Token(COMMA, complex.meme:9:16, ',', ',')
Token(RBRACE, complex.meme:10:1, '}', '}')
Token(FN, complex.meme:11:1, 'fn', 'fn')
Token(IDENT, complex.meme:11:4, 'test', 'test')
Token(LANGLE, complex.meme:11:8, '<', '<')
Token(IDENT, complex.meme:11:9, 'T', 'T')
Token(RANGLE, complex.meme:11:10, '>', '>')
Token(LPAREN, complex.meme:11:11, '(', '(')
Token(IDENT, complex.meme:11:12, 'a', 'a')
Token(COLON, complex.meme:11:13, ':', ':')
Token(CONST, complex.meme:11:15, 'const', 'const')
Token(ASTERISK, complex.meme:11:21, '*', '*')
Token(IDENT, complex.meme:11:22, 'T', 'T')
Token(RPAREN, complex.meme:11:23, ')', ')')
Token(LBRACE, complex.meme:11:25, '{', '{')
Token(RBRACE, complex.meme:11:26, '}', '}')
Token(STRUCT, complex.meme:12:1, 'struct', 'struct')
Token(IDENT, complex.meme:12:8, 'A', 'A')
Token(LBRACE, complex.meme:12:10, '{', '{')
Token(IDENT, complex.meme:12:12, 'v', 'v')
Token(COLON, complex.meme:12:13, ':', ':')
Token(IDENT, complex.meme:12:15, 'i8', 'i8')
Token(COMMA, complex.meme:12:17, ',', ',')
Token(IDENT, complex.meme:12:19, 'z', 'z')
Token(COLON, complex.meme:12:20, ':', ':')
Token(IDENT, complex.meme:12:22, 'bool', 'bool')
Token(COMMA, complex.meme:12:26, ',', ',')
Token(RBRACE, complex.meme:12:28, '}', '}')
Token(IMPL, complex.meme:13:1, 'impl', 'impl')
Token(IDENT, complex.meme:13:6, 'A', 'A')
Token(LBRACE, complex.meme:13:8, '{', '{')
Token(STATIC, complex.meme:14:3, 'static', 'static')
Token(FN, complex.meme:14:10, 'fn', 'fn')
Token(IDENT, complex.meme:14:13, 'new', 'new')
Token(LPAREN, complex.meme:14:16, '(', '(')
Token(RPAREN, complex.meme:14:17, ')', ')')
Token(LBRACE, complex.meme:14:19, '{', '{')
Token(RBRACE, complex.meme:14:20, '}', '}')
Token(RBRACE, complex.meme:15:1, '}', '}')
Token(INTF, complex.meme:16:1, 'intf', 'intf')
Token(IDENT, complex.meme:16:6, 'Intf', 'Intf')
Token(LBRACE, complex.meme:16:11, '{', '{')
Token(RBRACE, complex.meme:16:12, '}', '}')
Token(INTF, complex.meme:17:1, 'intf', 'intf')
Token(IDENT, complex.meme:17:6, 'IntfT', 'IntfT')
Token(LANGLE, complex.meme:17:11, '<', '<')
Token(IDENT, complex.meme:17:12, 'T', 'T')
Token(RANGLE, complex.meme:17:13, '>', '>')
Token(LBRACE, complex.meme:17:15, '{', '{')
Token(RBRACE, complex.meme:17:16, '}', '}')
Token(IMPL, complex.meme:18:1, 'impl', 'impl')
Token(IDENT, complex.meme:18:6, 'Intf', 'Intf')
Token(FOR, complex.meme:18:11, 'for', 'for')
Token(IDENT, complex.meme:18:15, 'A', 'A')
Token(LBRACE, complex.meme:18:17, '{', '{')
Token(RBRACE, complex.meme:18:18, '}', '}')
Token(IMPL, complex.meme:19:1, 'impl', 'impl')
Token(LANGLE, complex.meme:19:5, '<', '<')
Token(IDENT, complex.meme:19:6, 'T', 'T')
Token(RANGLE, complex.meme:19:7, '>', '>')
Token(IDENT, complex.meme:19:9, 'IntfT', 'IntfT')
Token(LANGLE, complex.meme:19:14, '<', '<')
Token(IDENT, complex.meme:19:15, 'T', 'T')
Token(RANGLE, complex.meme:19:16, '>', '>')
Token(FOR, complex.meme:19:18, 'for', 'for')
Token(IDENT, complex.meme:19:22, 'A', 'A')
Token(LBRACE, complex.meme:19:24, '{', '{')
Token(RBRACE, complex.meme:19:25, '}', '}')
Token(FN, complex.meme:20:1, 'fn', 'fn')
Token(IDENT, complex.meme:20:4, 'main', 'main')
Token(LPAREN, complex.meme:20:8, '(', '(')
Token(RPAREN, complex.meme:20:9, ')', ')')
Token(IDENT, complex.meme:20:11, 'i8', 'i8')
Token(LBRACE, complex.meme:20:14, '{', '{')
Token(ASM, complex.meme:21:3, 'asm {}')
Token(ASM, complex.meme:22:3, 'asm {
    lhu r30, 3
  }', '
    lhu r30, 3
  ')
Token(IDENT, complex.meme:25:3, 'st', 'st')
Token(COLON, complex.meme:25:6, ':', ':')
Token(IDENT, complex.meme:25:8, 'A', 'A')
Token(EQUAL, complex.meme:25:10, '=', '=')
Token(IDENT, complex.meme:25:12, 'A', 'A')
Token(LBRACE, complex.meme:25:13, '{', '{')
Token(RBRACE, complex.meme:25:14, '}', '}')
Token(SEMICOLON, complex.meme:25:15, ';', ';')
Token(IDENT, complex.meme:26:3, 'test_enum', 'test_enum')
Token(COLON, complex.meme:26:13, ':', ':')
Token(EQUAL, complex.meme:26:14, '=', '=')
Token(IDENT, complex.meme:26:16, 'TestEnum', 'TestEnum')
Token(DOT, complex.meme:26:24, '.', '.')
Token(IDENT, complex.meme:26:25, 'Test3', 'Test3')
Token(LBRACE, complex.meme:26:30, '{', '{')
Token(IDENT, complex.meme:26:31, 'st', 'st')
Token(RBRACE, complex.meme:26:33, '}', '}')
Token(SEMICOLON, complex.meme:26:34, ';', ';')
Token(IDENT, complex.meme:27:3, 'st', 'st')
Token(DOT, complex.meme:27:5, '.', '.')
Token(IDENT, complex.meme:27:6, 'v', 'v')
Token(EQUAL, complex.meme:27:8, '=', '=')
Token(INT_LIT, complex.meme:27:10, '0x3', 3, '0x3')
Token(SEMICOLON, complex.meme:27:13, ';', ';')
Token(IDENT, complex.meme:28:3, 'e', 'e')
Token(COLON, complex.meme:28:5, ':', ':')
Token(EQUAL, complex.meme:28:6, '=', '=')
Token(IDENT, complex.meme:28:8, 'i8', 'i8')
Token(LBRACE, complex.meme:28:10, '{', '{')
Token(INT_LIT, complex.meme:28:11, '0', 0, '0')
Token(RBRACE, complex.meme:28:12, '}', '}')
Token(SEMICOLON, complex.meme:28:13, ';', ';')
Token(IDENT, complex.meme:29:3, 'a', 'a')
Token(COLON, complex.meme:29:5, ':', ':')
Token(EQUAL, complex.meme:29:6, '=', '=')
Token(IDENT, complex.meme:29:8, 'i8', 'i8')
Token(LBRACE, complex.meme:29:10, '{', '{')
Token(INT_LIT, complex.meme:29:11, '02', 2, '02')
Token(RBRACE, complex.meme:29:13, '}', '}')
Token(SEMICOLON, complex.meme:29:14, ';', ';')
Token(IDENT, complex.meme:30:3, 'd', 'd')
Token(COLON, complex.meme:30:5, ':', ':')
Token(LSQUARE, complex.meme:30:7, '[', '[')
Token(INT_LIT, complex.meme:30:8, '40', 40, '40')
Token(RSQUARE, complex.meme:30:10, ']', ']')
Token(IDENT, complex.meme:30:11, 'i8', 'i8')
Token(EQUAL, complex.meme:30:14, '=', '=')
Token(LBRACE, complex.meme:30:16, '{', '{')
Token(RBRACE, complex.meme:30:17, '}', '}')
Token(SEMICOLON, complex.meme:30:18, ';', ';')
Token(IDENT, complex.meme:31:3, 'd', 'd')
Token(LSQUARE, complex.meme:31:4, '[', '[')
Token(DMINUS, complex.meme:31:5, '--', '--')
Token(IDENT, complex.meme:31:7, 'st', 'st')
Token(DOT, complex.meme:31:9, '.', '.')
Token(IDENT, complex.meme:31:10, 'v', 'v')
Token(RSQUARE, complex.meme:31:11, ']', ']')
Token(EQUAL, complex.meme:31:13, '=', '=')
Token(INT_LIT, complex.meme:31:15, '1', 1, '1')
Token(SEMICOLON, complex.meme:31:16, ';', ';')
Token(IDENT, complex.meme:32:3, 'd', 'd')
Token(LSQUARE, complex.meme:32:4, '[', '[')
Token(IDENT, complex.meme:32:5, 'st', 'st')
Token(DOT, complex.meme:32:7, '.', '.')
Token(IDENT, complex.meme:32:8, 'v', 'v')
Token(DPLUS, complex.meme:32:9, '++', '++')
Token(RSQUARE, complex.meme:32:11, ']', ']')
Token(EQUAL, complex.meme:32:13, '=', '=')
Token(INT_LIT, complex.meme:32:15, '1', 1, '1')
Token(SEMICOLON, complex.meme:32:16, ';', ';')
Token(IDENT, complex.meme:33:3, 'd', 'd')
Token(LSQUARE, complex.meme:33:4, '[', '[')
Token(INT_LIT, complex.meme:33:5, '40', 40, '40')
Token(MINUS, complex.meme:33:8, '-', '-')
Token(INT_LIT, complex.meme:33:10, '1', 1, '1')
Token(RSQUARE, complex.meme:33:11, ']', ']')
Token(EQUAL, complex.meme:33:13, '=', '=')
Token(BOOL_LIT, complex.meme:33:15, 'true', 1, 'true')
Token(DAMPERSAND, complex.meme:33:20, '&&', '&&')
Token(LPAREN, complex.meme:33:23, '(', '(')
Token(BOOL_LIT, complex.meme:33:24, 'true', 1, 'true')
Token(DBAR, complex.meme:33:29, '||', '||')
Token(IDENT, complex.meme:33:32, '!false', '!false')
Token(RPAREN, complex.meme:33:38, ')', ')')
Token(QUESTION, complex.meme:33:40, '?', '?')
Token(IDENT, complex.meme:33:42, '~0', '~0')
Token(AMPERSAND, complex.meme:33:45, '&', '&')
Token(INT_LIT, complex.meme:33:47, '1', 1, '1')
Token(COLON, complex.meme:33:49, ':', ':')
Token(INT_LIT, complex.meme:33:51, '1', 1, '1')
Token(CARET, complex.meme:33:53, '^', '^')
Token(INT_LIT, complex.meme:33:55, '2', 2, '2')
Token(BAR, complex.meme:33:57, '|', '|')
Token(INT_LIT, complex.meme:33:59, '3', 3, '3')
Token(SEMICOLON, complex.meme:33:60, ';', ';')
Token(IF, complex.meme:34:3, 'if', 'if')
Token(IDENT, complex.meme:34:6, 'e', 'e')
Token(DEQUAL, complex.meme:34:8, '==', '==')
Token(IDENT, complex.meme:34:11, 'st', 'st')
Token(DOT, complex.meme:34:13, '.', '.')
Token(IDENT, complex.meme:34:14, 'v', 'v')
Token(DBAR, complex.meme:34:16, '||', '||')
Token(IDENT, complex.meme:34:19, 'd', 'd')
Token(LSQUARE, complex.meme:34:20, '[', '[')
Token(INT_LIT, complex.meme:34:21, '23', 23, '23')
Token(MINUS, complex.meme:34:24, '-', '-')
Token(INT_LIT, complex.meme:34:26, '2', 2, '2')
Token(RSQUARE, complex.meme:34:27, ']', ']')
Token(NEQUAL, complex.meme:34:29, '!=', '!=')
Token(IDENT, complex.meme:34:32, 'a', 'a')
Token(DBAR, complex.meme:34:34, '||', '||')
Token(IDENT, complex.meme:34:37, 'a', 'a')
Token(LTEQUAL, complex.meme:34:39, '<=', '<=')
Token(IDENT, complex.meme:34:42, 'e', 'e')
Token(DBAR, complex.meme:34:44, '||', '||')
Token(IDENT, complex.meme:34:47, 'a', 'a')
Token(RANGLE, complex.meme:34:49, '>', '>')
Token(IDENT, complex.meme:34:51, 'e', 'e')
Token(DBAR, complex.meme:34:53, '||', '||')
Token(IDENT, complex.meme:34:56, 'e', 'e')
Token(GTEQUAL, complex.meme:34:58, '>=', '>=')
Token(IDENT, complex.meme:34:61, 'st', 'st')
Token(DOT, complex.meme:34:63, '.', '.')
Token(IDENT, complex.meme:34:64, 'v', 'v')
Token(DBAR, complex.meme:34:66, '||', '||')
Token(IDENT, complex.meme:34:69, 'e', 'e')
Token(LANGLE, complex.meme:34:71, '<', '<')
Token(IDENT, complex.meme:34:73, 'd', 'd')
Token(LSQUARE, complex.meme:34:74, '[', '[')
Token(INT_LIT, complex.meme:34:75, '3', 3, '3')
Token(RSQUARE, complex.meme:34:76, ']', ']')
Token(LBRACE, complex.meme:34:78, '{', '{')
Token(IDENT, complex.meme:35:5, 'test', 'test')
Token(LANGLE, complex.meme:35:9, '<', '<')
Token(IDENT, complex.meme:35:10, 'i8', 'i8')
Token(RANGLE, complex.meme:35:12, '>', '>')
Token(LPAREN, complex.meme:35:13, '(', '(')
Token(AMPERSAND, complex.meme:35:14, '&', '&')
Token(IDENT, complex.meme:35:15, 'e', 'e')
Token(RPAREN, complex.meme:35:16, ')', ')')
Token(SEMICOLON, complex.meme:35:17, ';', ';')
Token(RBRACE, complex.meme:36:3, '}', '}')
Token(ELSE, complex.meme:36:5, 'else', 'else')
Token(IF, complex.meme:36:10, 'if', 'if')
Token(LPAREN, complex.meme:36:13, '(', '(')
Token(BOOL_LIT, complex.meme:36:14, 'true', 1, 'true')
Token(RPAREN, complex.meme:36:18, ')', ')')
Token(LBRACE, complex.meme:36:20, '{', '{')
Token(RBRACE, complex.meme:36:21, '}', '}')
Token(ELSE, complex.meme:36:23, 'else', 'else')
Token(LBRACE, complex.meme:36:28, '{', '{')
Token(RBRACE, complex.meme:38:3, '}', '}')
Token(IDENT, complex.meme:39:3, 'b', 'b')
Token(COLON, complex.meme:39:5, ':', ':')
Token(EQUAL, complex.meme:39:6, '=', '=')
Token(MINUS, complex.meme:39:8, '-', '-')
Token(LPAREN, complex.meme:39:9, '(', '(')
Token(INT_LIT, complex.meme:39:10, '34', 34, '34')
Token(PLUS, complex.meme:39:13, '+', '+')
Token(INT_LIT, complex.meme:39:15, '32', 32, '32')
Token(RPAREN, complex.meme:39:17, ')', ')')
Token(ASTERISK, complex.meme:39:19, '*', '*')
Token(LPAREN, complex.meme:39:21, '(', '(')
Token(INT_LIT, complex.meme:39:22, '55', 55, '55')
Token(FSLASH, complex.meme:39:25, '/', '/')
Token(INT_LIT, complex.meme:39:27, '3', 3, '3')
Token(RPAREN, complex.meme:39:28, ')', ')')
Token(MINUS, complex.meme:39:30, '-', '-')
Token(MINUS, complex.meme:39:32, '-', '-')
Token(INT_LIT, complex.meme:39:33, '4', 4, '4')
Token(SEMICOLON, complex.meme:39:34, ';', ';')
Token(IDENT, complex.meme:40:3, 'a', 'a')
Token(MINUS, complex.meme:40:4, '-', '-')
Token(MINUS, complex.meme:40:6, '-', '-')
Token(INT_LIT, complex.meme:40:7, '4', 4, '4')
Token(PERCENT, complex.meme:40:9, '%', '%')
Token(INT_LIT, complex.meme:40:11, '2', 2, '2')
Token(SEMICOLON, complex.meme:40:12, ';', ';')
Token(IDENT, complex.meme:41:3, 'a', 'a')
Token(DMINUS, complex.meme:41:4, '--', '--')
Token(MINUS, complex.meme:41:6, '-', '-')
Token(IDENT, complex.meme:41:8, 'b', 'b')
Token(SEMICOLON, complex.meme:41:9, ';', ';')
Token(CHAR_LIT, complex.meme:42:3, ''a'', 97, 'a')
Token(SEMICOLON, complex.meme:42:6, ';', ';')
Token(CHAR_LIT, complex.meme:43:3, ''\\'', 92, '\')
Token(SEMICOLON, complex.meme:43:7, ';', ';')
Token(CHAR_LIT, complex.meme:44:3, ''\''', 39, ''')
Token(SEMICOLON, complex.meme:44:7, ';', ';')
Token(CHAR_LIT, complex.meme:45:3, ''\"'', 34, '"')
Token(SEMICOLON, complex.meme:45:7, ';', ';')
Token(STR_LIT, complex.meme:46:3, '"b\""', 'b"')
Token(SEMICOLON, complex.meme:46:8, ';', ';')
Token(INT_LIT, complex.meme:47:3, '5', 5, '5')
Token(DOT, complex.meme:47:4, '.', '.')
Token(INT_LIT, complex.meme:47:5, '5', 5, '5')
Token(SEMICOLON, complex.meme:47:6, ';', ';')
Token(FOR, complex.meme:48:3, 'for', 'for')
Token(IDENT, complex.meme:48:7, 'f', 'f')
Token(COLON, complex.meme:48:9, ':', ':')
Token(EQUAL, complex.meme:48:10, '=', '=')
Token(IDENT, complex.meme:48:12, 'i8', 'i8')
Token(LBRACE, complex.meme:48:14, '{', '{')
Token(INT_LIT, complex.meme:48:15, '0', 0, '0')
Token(RBRACE, complex.meme:48:16, '}', '}')
Token(SEMICOLON, complex.meme:48:17, ';', ';')
Token(IDENT, complex.meme:48:19, 'f', 'f')
Token(LANGLE, complex.meme:48:21, '<', '<')
Token(INT_LIT, complex.meme:48:23, '10', 10, '10')
Token(SEMICOLON, complex.meme:48:25, ';', ';')
Token(IDENT, complex.meme:48:27, 'f', 'f')
Token(DPLUS, complex.meme:48:28, '++', '++')
Token(LBRACE, complex.meme:48:31, '{', '{')
Token(RET, complex.meme:49:5, 'ret', 'ret')
Token(INT_LIT, complex.meme:49:9, '4', 4, '4')
Token(SEMICOLON, complex.meme:49:10, ';', ';')
Token(RBRACE, complex.meme:50:3, '}', '}')
Token(COMMENT, complex.meme:51:3, '// Big comment "\" ''', '//')
Token(RET, complex.meme:52:3, 'ret', 'ret')
Token(INT_LIT, complex.meme:52:7, '0', 0, '0')
Token(SEMICOLON, complex.meme:52:8, ';', ';')
Token(RBRACE, complex.meme:53:1, '}', '}')
